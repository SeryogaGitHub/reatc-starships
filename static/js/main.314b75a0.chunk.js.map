{"version":3,"sources":["redux/shipsReducer.js","components/Ships/Pagination.js","components/common/Preloader.js","components/Ships/Ships.js","components/Ships/ShipsContainer.js","components/Ships/Ship.js","components/Ships/ShipContainer.js","App.js","serviceWorker.js","redux/redux-store.js","index.js"],"names":["initialState","ships","pageSize","totalCount","currentPage","searchText","isFetching","profile","searchShips","type","setCurrentPage","page","setTotalCount","count","setIsFetching","fetching","setSearchText","search","shipsReducer","state","action","Pagination","props","onChangePages","portionSize","pageCount","Math","ceil","pages","i","push","pointCount","useState","pointNumber","setPointNumber","leftPortionNumber","rightPortionNumber","className","onClick","filter","p","map","key","Preloader","Ships","onSearch","setShips","ship","to","url","Number","replace","name","model","length","consumables","value","placeholder","onChange","e","target","autoFocus","ShipsContainer","getShips","getShipsSearch","history","text","this","match","params","React","Component","ShipsContainerWithRouter","withRouter","connect","shipsPage","dispatch","axios","get","then","response","data","results","Ship","ShipContainer","getProfile","userId","ShipContainerWithRouter","App","exact","path","render","Boolean","window","location","hostname","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","rerenderEntireTree","ReactDOM","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.314b75a0.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst SET_SHIPS = \"SET_SHIPS\";\r\nconst SET_PROFILE = \"SET_PROFILE\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\r\nconst SEARCH_SHIPS = \"SEARCH_SHIPS\";\r\nconst SET_IS_FETCHING = \"SET_IS_FETCHING\";\r\nconst SET_SEARCH_TEXT = \"SET_SEARCH_TEXT\";\r\n\r\nconst initialState = {\r\n  ships: [],\r\n  pageSize: 10,\r\n  totalCount: 0,\r\n  currentPage: 1,\r\n  searchText: null,\r\n  isFetching: false,\r\n  profile: null,\r\n};\r\n\r\nconst shipsReducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case SET_SHIPS: {\r\n      return {...state, ships: action.ships}\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return {...state, currentPage: action.page};\r\n    }\r\n    case SET_TOTAL_COUNT: {\r\n      return {...state, totalCount: action.count};\r\n    }\r\n    case SET_PROFILE: {\r\n      return {...state, profile: action.profile};\r\n    }\r\n    case SEARCH_SHIPS: {\r\n      return {...state, ships: action.ships}\r\n    }\r\n    case SET_IS_FETCHING: {\r\n      return {...state, isFetching: action.fetching}\r\n    }\r\n    case SET_SEARCH_TEXT: {\r\n      return {...state, searchText: action.search}\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setShips = (ships) => ({type: SET_SHIPS, ships});\r\nexport const searchShips = (ships) => ({type: SEARCH_SHIPS, ships});\r\nexport const setCurrentPage = (page) => ({type: SET_CURRENT_PAGE, page});\r\nexport const setTotalCount = (count) => ({type: SET_TOTAL_COUNT, count});\r\nexport const setProfile = (profile) => ({type: SET_PROFILE, profile});\r\nexport const setIsFetching = (fetching) => ({type: SET_IS_FETCHING, fetching});\r\nexport const setSearchText = (search) => ({type: SET_SEARCH_TEXT, search});\r\n\r\nexport const getProfile = (userId) => {\r\n  return (dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n    dispatch(setSearchText(\"\"));\r\n\r\n    axios.get('https://swapi.co/api/starships/'+userId)\r\n      .then((response) => {\r\n        dispatch(setProfile(response.data));\r\n        dispatch(setIsFetching(false));\r\n      });\r\n  }\r\n};\r\n\r\nexport const getShipsSearch = (text, page) => {\r\n  return (dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n    dispatch(setSearchText(text));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    axios.get(`https://swapi.co/api/starships/?search=${text}&page=${page}`)\r\n      .then(response => {\r\n        dispatch(searchShips(response.data.results));\r\n        dispatch(setTotalCount(response.data.count));\r\n        dispatch(setIsFetching(false));\r\n      });\r\n  }\r\n};\r\n\r\nexport const getShips = (page) => {\r\n  return (dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    axios.get(`https://swapi.co/api/starships/?page=${page}`)\r\n      .then(response => {\r\n        dispatch(setShips(response.data.results));\r\n        dispatch(setTotalCount(response.data.count));\r\n        dispatch(setIsFetching(false));\r\n      });\r\n  }\r\n};\r\n\r\n\r\nexport default shipsReducer;\r\n","import React, {useState} from 'react';\r\n\r\nlet Pagination = (props) => {\r\n  const {pageSize, totalCount, currentPage, onChangePages, portionSize = 3} = props;\r\n\r\n  const activePage = 'active';\r\n\r\n  let pageCount = Math.ceil(totalCount / pageSize);\r\n  let pages = [];\r\n\r\n  for (let i = 1; i <= pageCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let pointCount = Math.ceil(pageCount / portionSize);\r\n  let [pointNumber, setPointNumber] = useState(1);\r\n  let leftPortionNumber = (pointNumber - 1) * portionSize +1;\r\n  let rightPortionNumber = pointNumber * portionSize;\r\n\r\n  return (\r\n    <ul className=\"pagination\">\r\n      {pointNumber > 1 &&\r\n      <button className=\"arrow\" onClick={() => {setPointNumber(pointNumber - 1)}}>&larr;</button>}\r\n\r\n      {pages\r\n        .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n        .map((p, i) => {\r\n        return <li key={i} className={currentPage === p ? activePage : \"\"}\r\n                   onClick={() => {\r\n                     onChangePages(p);\r\n                   }}>{p}</li>;\r\n      })}\r\n\r\n      {pointCount > pointNumber &&\r\n      <button className=\"arrow\" onClick={() => {setPointNumber(pointNumber + 1)}}>&rarr;</button>}\r\n    </ul>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nlet Preloader = () => {\r\n  return <div className={'placeholder'}>\r\n    <div className=\"loader\"> </div>\r\n  </div>;\r\n};\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport Pagination from \"./Pagination\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../common/Preloader\";\r\n\r\nconst Ships = (props) => {\r\n  const {ships, currentPage, searchText, totalCount, pageSize, onSearch, onChangePages, isFetching} = props;\r\n\r\n  let setIdProfile = (url) => {\r\n    return Number(url.replace(/\\D+/g,\"\"))\r\n  };\r\n\r\n  let setShips = ships.map((ship, i) =>\r\n    <NavLink key={i} to={'/starship/' + setIdProfile(ship.url)} className={'ship'}>\r\n      <h2>{ship.name}</h2>\r\n\r\n      <ul>\r\n        <li>Model: {ship.model}</li>\r\n        <li>Length: {ship.length}</li>\r\n        <li>Consumables: {ship.consumables}</li>\r\n      </ul>\r\n    </NavLink>\r\n  );\r\n\r\n  return(\r\n    <div className={\"ships-page\"}>\r\n      <input type=\"search\"\r\n             value={searchText ? searchText : \"\"}\r\n             className={\"search\"}\r\n             placeholder={\"Search\"}\r\n             onChange={(e)=> onSearch(e.target.value)}\r\n             autoFocus={true}/>\r\n\r\n      <Pagination currentPage={currentPage}\r\n                  totalCount={totalCount}\r\n                  pageSize={pageSize}\r\n                  onChangePages={onChangePages}/>\r\n\r\n      <div className={'ships-list'}>\r\n        {isFetching ? <Preloader/> : null}\r\n\r\n        {setShips}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Ships;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  searchShips,\r\n  getShips,\r\n  getShipsSearch,\r\n  setSearchText\r\n} from \"../../redux/shipsReducer\";\r\nimport Ships from \"./Ships\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ShipsContainer extends React.Component {\r\n  componentDidMount() {\r\n    const {getShips, currentPage, getShipsSearch} = this.props;\r\n\r\n    let {search, page} = this.props.match.params;\r\n    if(search && page){\r\n      getShipsSearch(search, Number(page));\r\n    } else {\r\n      getShips(currentPage);\r\n    }\r\n\r\n  }\r\n\r\n  onChangePages = (page) => {\r\n    const {getShips, searchText, getShipsSearch} = this.props;\r\n\r\n    if(searchText && page){\r\n      getShipsSearch(searchText, page);\r\n      this.props.history.push(`/search=${searchText}&page=${page}`);\r\n    } else {\r\n      getShips(page);\r\n    }\r\n  };\r\n\r\n  onSearch = (text) => {\r\n    const {getShipsSearch, currentPage, getShips, setSearchText} = this.props;\r\n\r\n    if(text.length){\r\n      getShipsSearch(text, 1);\r\n      this.props.history.push(`/search=${text}&page=${1}`);\r\n    } else{\r\n      this.props.history.push(`/`);\r\n      getShips(currentPage);\r\n      setSearchText(null);\r\n    }\r\n  };\r\n\r\n  render(){\r\n    const {ships, isFetching, setCurrentPage, totalCount, pageSize, currentPage, searchText} = this.props;\r\n    return (<>\r\n      <Ships ships={ships}\r\n                  setCurrentPage={setCurrentPage}\r\n                  totalCount={totalCount}\r\n                  pageSize={pageSize}\r\n                  currentPage={currentPage}\r\n                  onChangePages={this.onChangePages}\r\n                  onSearch={this.onSearch}\r\n                  isFetching={isFetching}\r\n                  searchText={searchText}\r\n    />\r\n    </>)\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    ships: state.shipsPage.ships,\r\n    pageSize: state.shipsPage.pageSize,\r\n    currentPage: state.shipsPage.currentPage,\r\n    totalCount: state.shipsPage.totalCount,\r\n    searchText: state.shipsPage.searchText,\r\n    isFetching: state.shipsPage.isFetching\r\n  }\r\n};\r\n\r\nlet ShipsContainerWithRouter = withRouter(ShipsContainer);\r\n\r\nexport default connect(mapStateToProps, {searchShips, getShips, getShipsSearch, setSearchText})(ShipsContainerWithRouter);\r\n","import React from \"react\";\r\nimport Preloader from \"../common/Preloader\";\r\n\r\nconst Ship = (props) => {\r\n  const {profile, isFetching} = props;\r\n\r\n  if (!props.profile){\r\n    return <Preloader/>;\r\n  }\r\n  return(\r\n    <div className={\"ship-page\"}>\r\n      {isFetching ? <Preloader/> : null}\r\n\r\n      <h2>{profile.name}</h2>\r\n\r\n      <ul>\r\n        <li>Model: {profile.model}</li>\r\n        <li>Length: {profile.length}</li>\r\n        <li>Consumables: {profile.consumables}</li>\r\n      </ul>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Ship;\r\n","import React from \"react\";\r\nimport Ship from \"./Ship\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile} from \"../../redux/shipsReducer\";\r\n\r\nclass ShipContainer extends React.Component{\r\n  componentDidMount() {\r\n    const {getProfile} = this.props;\r\n    let {userId} = this.props.match.params;\r\n\r\n    getProfile(userId);\r\n  }\r\n\r\n  render() {\r\n    const {profile, isFetching} = this.props;\r\n    return <Ship profile={profile} isFetching={isFetching}/>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    profile: state.shipsPage.profile,\r\n    isFetching: state.shipsPage.isFetching\r\n  };\r\n};\r\n\r\nlet ShipContainerWithRouter = withRouter(ShipContainer);\r\n\r\nexport default connect(mapStateToProps, {getProfile})(ShipContainerWithRouter);\r\n","import React from 'react';\nimport {NavLink, Route} from \"react-router-dom\";\nimport ShipsContainer from \"./components/Ships/ShipsContainer\";\nimport './App.css';\nimport ShipContainer from \"./components/Ships/ShipContainer\";\n\nfunction App() {\n  return (\n    <div className=\"center\">\n      <NavLink to='/' className={'link'}>Main page</NavLink>\n      <Route exact path='/' render={() => <ShipsContainer/>}/>\n      <Route exact path='/search=:search&page=:page' render={() => <ShipsContainer/>}/>\n      <Route exact path='/starship/:userId?' render={() => <ShipContainer/>}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport shipsReducer from \"./shipsReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n  shipsPage: shipsReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nconst rerenderEntireTree = () => {\n  ReactDOM.render(\n    <HashRouter>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </HashRouter>, document.getElementById('root'));\n};\n\nrerenderEntireTree();\n\nstore.subscribe(() => {\n  rerenderEntireTree();\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}